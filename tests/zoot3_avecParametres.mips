#MATHIEU STEINBACH Hugo & MOSELLE Marie-Luc

.data

AffichageVrai: .asciiz "vrai"
AffichageFaux: .asciiz "faux"
saut_ligne: .asciiz "\n"

.text

main: 
   #Initialisation de la base des variables :
	move $s7, $sp
	addi $sp, $sp, -28

   #Debut du programme :

   #ecrire fonc5
	   #Sauvegarde des registres
	sw $ra,0($sp)
	sw $s1,-4($sp)
	addi $sp,$sp,-8
   #Appel de la fonction
	jal fonc5
   #Restauration des registres
	lw $s1,4($sp)
	lw $ra,8($sp)
	addi $sp,$sp,8

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

   #ecrire fonc4
	   #Sauvegarde des registres
	sw $ra,0($sp)
	sw $s1,-4($sp)
	addi $sp,$sp,-8
   #Appel de la fonction
	jal fonc4
   #Restauration des registres
	lw $s1,4($sp)
	lw $ra,8($sp)
	addi $sp,$sp,8

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

   #ecrire fonc5
	   #Sauvegarde des registres
	sw $ra,0($sp)
	sw $s1,-4($sp)
	addi $sp,$sp,-8
   #Appel de la fonction
	jal fonc5
   #Restauration des registres
	lw $s1,4($sp)
	lw $ra,8($sp)
	addi $sp,$sp,8

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

	b end

	fonc4:
	li $v0, 1
	sw $v0, -4($s7)
	li $v0, 2
	sw $v0, 0($s7)
   #ecrire x
	lw $v0, 0($s7)

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

   #ecrire y
	lw $v0, -4($s7)

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

	li $v0, 0
	jr $ra

	fonc5:
	li $v0, 3
	sw $v0, -16($s7)
	li $v0, 4
	sw $v0, -12($s7)
	li $v0, 5
	sw $v0, -20($s7)
   #ecrire a
	lw $v0, -12($s7)

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

   #ecrire b
	lw $v0, -16($s7)

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

   #ecrire c
	lw $v0, -20($s7)

	move $a0, $v0
	li $v0, 1
	syscall
	la $a0, saut_ligne
	li $v0, 4
	syscall

	li $v0, 0
	jr $ra

   #Fin du programme :
	end:
	li $v0, 10
	syscall
